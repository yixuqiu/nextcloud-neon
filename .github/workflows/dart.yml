name: Dart CI
on:
  pull_request:

concurrency:
  group: dart-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  dart-ci:
    name: Dart CI
    runs-on: ubuntu-22.04
    permissions:
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
        with:
          fetch-depth: 0
      - name: Login to GHCR
        uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446 # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@d70bba72b1f3fd22344832f00baa16ece964efeb # v3

      - name: Install dart
        uses: dart-lang/setup-dart@0a8a0fc875eb934c15d08629302413c671d3f672 # v1
      - name: Setup
        run: ./tool/setup.sh

      - name: Check up-to-date pubspec.lock
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            git --no-pager diff
            exit 1
          fi
      - name: Check formatting
        run: melos run format:check
      - name: Lint code
        run: melos run analyze
      - name: Run tests
        run: |
          mapfile -t packages < <(melos list --parsable --diff=${{ github.event.pull_request.head.sha }}~${{ github.event.pull_request.commits }}..${{ github.event.pull_request.head.sha }} --include-dependents | xargs -r -n1 basename)
          if [ -z "$packages" ]; then exit 0; fi
          packages_glob="$(printf ",%s" "${packages[@]}")"
          packages_glob="${packages_glob:1}"
          if [ -n "$packages_glob" ]; then
            if [[ "$packages_glob" == *"nextcloud"* ]]; then
              if [[ "${{ github.event.pull_request.head.repo.full_name }}" == "${{ github.repository }}" ]]; then
                export PUSH_IMAGES="1"
              fi
              ./tool/build-dev-container.sh
            fi
            MELOS_PACKAGES="$packages_glob" melos test
          else
            ./tool/build-dev-container.sh
            melos test
          fi

      - name: Setup Codecov
        run: |
          cd /tmp
          curl https://keybase.io/codecovsecurity/pgp_keys.asc | gpg --no-default-keyring --keyring trustedkeys.gpg --import
          curl -Os https://uploader.codecov.io/latest/linux/codecov
          curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM
          curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM.sig
          gpgv codecov.SHA256SUM.sig codecov.SHA256SUM

          shasum -a 256 -c codecov.SHA256SUM
          chmod +x codecov
          mkdir /tmp/bin
          mv codecov /tmp/bin
      - name: Upload coverage to Codecov
        run: |
          export PATH="$PATH:/tmp/bin"
          melos exec --file-exists="coverage/lcov.info" --concurrency=1 -- "
            codecov --verbose upload-process --fail-on-error -F MELOS_PACKAGE_NAME -f MELOS_PACKAGE_PATH/coverage/lcov.info -t ${{ secrets.CODECOV_TOKEN }}
          "
