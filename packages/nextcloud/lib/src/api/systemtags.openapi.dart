// Use of this source code is governed by a agpl license. It can be obtained at `https://spdx.org/licenses/AGPL-3.0-only.html`.

// OpenAPI client generated by Dynamite. Do not manually edit this file.

// ignore_for_file: camel_case_extensions, camel_case_types, cascade_invocations
// ignore_for_file: discarded_futures
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: non_constant_identifier_names, public_member_api_docs
// ignore_for_file: unreachable_switch_case

/// systemtags Version: 0.0.1.
///
/// Collaborative tagging functionality which shares tags among people.
///
/// Use of this source code is governed by a agpl license.
/// It can be obtained at `https://spdx.org/licenses/AGPL-3.0-only.html`.
library; // ignore_for_file: no_leading_underscores_for_library_prefixes

import 'package:built_collection/built_collection.dart';
import 'package:built_value/built_value.dart';
import 'package:built_value/serializer.dart';
import 'package:built_value/standard_json_plugin.dart' as _i3;
import 'package:dynamite_runtime/built_value.dart' as _i2;
import 'package:meta/meta.dart' as _i1;

part 'systemtags.openapi.g.dart';

class Capabilities_Systemtags_Enabled extends EnumClass {
  const Capabilities_Systemtags_Enabled._(super.name);

  /// `true`
  @BuiltValueEnumConst(wireName: 'true')
  static const Capabilities_Systemtags_Enabled $true = _$capabilitiesSystemtagsEnabled$true;

  /// Returns a set with all values this enum contains.
  // coverage:ignore-start
  static BuiltSet<Capabilities_Systemtags_Enabled> get values => _$capabilitiesSystemtagsEnabledValues;
  // coverage:ignore-end

  /// Returns the enum value associated to the [name].
  static Capabilities_Systemtags_Enabled valueOf(String name) => _$valueOfCapabilities_Systemtags_Enabled(name);

  /// Returns the serialized value of this enum value.
  bool get value => _$jsonSerializers.serializeWith(serializer, this)! as bool;

  /// Serializer for Capabilities_Systemtags_Enabled.
  @BuiltValueSerializer(custom: true)
  static Serializer<Capabilities_Systemtags_Enabled> get serializer =>
      const _$Capabilities_Systemtags_EnabledSerializer();
}

class _$Capabilities_Systemtags_EnabledSerializer implements PrimitiveSerializer<Capabilities_Systemtags_Enabled> {
  const _$Capabilities_Systemtags_EnabledSerializer();

  static const Map<Capabilities_Systemtags_Enabled, Object> _toWire = <Capabilities_Systemtags_Enabled, Object>{
    Capabilities_Systemtags_Enabled.$true: true,
  };

  static const Map<Object, Capabilities_Systemtags_Enabled> _fromWire = <Object, Capabilities_Systemtags_Enabled>{
    true: Capabilities_Systemtags_Enabled.$true,
  };

  @override
  Iterable<Type> get types => const [Capabilities_Systemtags_Enabled];

  @override
  String get wireName => 'Capabilities_Systemtags_Enabled';

  @override
  Object serialize(
    Serializers serializers,
    Capabilities_Systemtags_Enabled object, {
    FullType specifiedType = FullType.unspecified,
  }) =>
      _toWire[object]!;

  @override
  Capabilities_Systemtags_Enabled deserialize(
    Serializers serializers,
    Object serialized, {
    FullType specifiedType = FullType.unspecified,
  }) =>
      _fromWire[serialized]!;
}

@BuiltValue(instantiable: false)
sealed class $Capabilities_SystemtagsInterface {
  Capabilities_Systemtags_Enabled get enabled;

  /// Rebuilds the instance.
  ///
  /// The result is the same as this instance but with [updates] applied.
  /// [updates] is a function that takes a builder [$Capabilities_SystemtagsInterfaceBuilder].
  $Capabilities_SystemtagsInterface rebuild(void Function($Capabilities_SystemtagsInterfaceBuilder) updates);

  /// Converts the instance to a builder [$Capabilities_SystemtagsInterfaceBuilder].
  $Capabilities_SystemtagsInterfaceBuilder toBuilder();
  @BuiltValueHook(initializeBuilder: true)
  static void _defaults($Capabilities_SystemtagsInterfaceBuilder b) {}
  @BuiltValueHook(finalizeBuilder: true)
  static void _validate($Capabilities_SystemtagsInterfaceBuilder b) {}
}

abstract class Capabilities_Systemtags
    implements $Capabilities_SystemtagsInterface, Built<Capabilities_Systemtags, Capabilities_SystemtagsBuilder> {
  /// Creates a new Capabilities_Systemtags object using the builder pattern.
  factory Capabilities_Systemtags([void Function(Capabilities_SystemtagsBuilder)? b]) = _$Capabilities_Systemtags;

  // coverage:ignore-start
  const Capabilities_Systemtags._();
  // coverage:ignore-end

  /// Creates a new object from the given [json] data.
  ///
  /// Use [toJson] to serialize it back into json.
  // coverage:ignore-start
  factory Capabilities_Systemtags.fromJson(Map<String, dynamic> json) =>
      _$jsonSerializers.deserializeWith(serializer, json)!;
  // coverage:ignore-end

  /// Parses this object into a json like map.
  ///
  /// Use the fromJson factory to revive it again.
  // coverage:ignore-start
  Map<String, dynamic> toJson() => _$jsonSerializers.serializeWith(serializer, this)! as Map<String, dynamic>;
  // coverage:ignore-end

  /// Serializer for Capabilities_Systemtags.
  static Serializer<Capabilities_Systemtags> get serializer => _$capabilitiesSystemtagsSerializer;

  @BuiltValueHook(initializeBuilder: true)
  static void _defaults(Capabilities_SystemtagsBuilder b) {
    $Capabilities_SystemtagsInterface._defaults(b);
  }

  @BuiltValueHook(finalizeBuilder: true)
  static void _validate(Capabilities_SystemtagsBuilder b) {
    $Capabilities_SystemtagsInterface._validate(b);
  }
}

@BuiltValue(instantiable: false)
sealed class $CapabilitiesInterface {
  Capabilities_Systemtags get systemtags;

  /// Rebuilds the instance.
  ///
  /// The result is the same as this instance but with [updates] applied.
  /// [updates] is a function that takes a builder [$CapabilitiesInterfaceBuilder].
  $CapabilitiesInterface rebuild(void Function($CapabilitiesInterfaceBuilder) updates);

  /// Converts the instance to a builder [$CapabilitiesInterfaceBuilder].
  $CapabilitiesInterfaceBuilder toBuilder();
  @BuiltValueHook(initializeBuilder: true)
  static void _defaults($CapabilitiesInterfaceBuilder b) {}
  @BuiltValueHook(finalizeBuilder: true)
  static void _validate($CapabilitiesInterfaceBuilder b) {}
}

abstract class Capabilities implements $CapabilitiesInterface, Built<Capabilities, CapabilitiesBuilder> {
  /// Creates a new Capabilities object using the builder pattern.
  factory Capabilities([void Function(CapabilitiesBuilder)? b]) = _$Capabilities;

  // coverage:ignore-start
  const Capabilities._();
  // coverage:ignore-end

  /// Creates a new object from the given [json] data.
  ///
  /// Use [toJson] to serialize it back into json.
  // coverage:ignore-start
  factory Capabilities.fromJson(Map<String, dynamic> json) => _$jsonSerializers.deserializeWith(serializer, json)!;
  // coverage:ignore-end

  /// Parses this object into a json like map.
  ///
  /// Use the fromJson factory to revive it again.
  // coverage:ignore-start
  Map<String, dynamic> toJson() => _$jsonSerializers.serializeWith(serializer, this)! as Map<String, dynamic>;
  // coverage:ignore-end

  /// Serializer for Capabilities.
  static Serializer<Capabilities> get serializer => _$capabilitiesSerializer;

  @BuiltValueHook(initializeBuilder: true)
  static void _defaults(CapabilitiesBuilder b) {
    $CapabilitiesInterface._defaults(b);
  }

  @BuiltValueHook(finalizeBuilder: true)
  static void _validate(CapabilitiesBuilder b) {
    $CapabilitiesInterface._validate(b);
  }
}

// coverage:ignore-start
/// Serializer for all values in this library.
///
/// Serializes values into the `built_value` wire format.
/// See: [$jsonSerializers] for serializing into json.
@_i1.visibleForTesting
final Serializers $serializers = _$serializers;
final Serializers _$serializers = (Serializers().toBuilder()
      ..addBuilderFactory(const FullType(Capabilities), CapabilitiesBuilder.new)
      ..add(Capabilities.serializer)
      ..addBuilderFactory(const FullType(Capabilities_Systemtags), Capabilities_SystemtagsBuilder.new)
      ..add(Capabilities_Systemtags.serializer)
      ..add(Capabilities_Systemtags_Enabled.serializer))
    .build();

/// Serializer for all values in this library.
///
/// Serializes values into the json. Json serialization is more expensive than the built_value wire format.
/// See: [$serializers] for serializing into the `built_value` wire format.
@_i1.visibleForTesting
final Serializers $jsonSerializers = _$jsonSerializers;
final Serializers _$jsonSerializers = (_$serializers.toBuilder()
      ..add(_i2.DynamiteDoubleSerializer())
      ..addPlugin(_i3.StandardJsonPlugin())
      ..addPlugin(const _i2.HeaderPlugin())
      ..addPlugin(const _i2.ContentStringPlugin()))
    .build();
// coverage:ignore-end
